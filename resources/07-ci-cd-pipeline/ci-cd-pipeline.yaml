---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: ci-cd-pipeline
spec:
  description: |
    This is a sample pipeline for a CI/CD workflow.

    The pipeline support basic linting and static code analysis for Python projects.

    The pipeline consists of the following steps:
    - Git clone
    - Linting and static code analysis
      - Black linter
      - yaml-lint
      - pylint
    - Unit tests - pytest
    - Build the container image

  params:
    # Step 1:
    # Define parameter for the Git repository URL and revision
    # This parameter is used to clone the repository
    - name: git_url
      type: string
    - name: git_revision
      type: string
      default: main
  workspaces:
    # Define workspace for sharing files between tasks
    - name: shared-workspace
  tasks:
    # Step 2: Clone the repository
    - name: git-clone
      taskRef:
        name: git-clone
      params:
        - name: url
          value: "$(params.git_url)"
        - name: revision
          value: "$(params.git_revision)"
      workspaces:
        - name: output
          workspace: shared-workspace
    # Step 3: Run linting and static code analysis
    - name: pylint
      taskRef:
        name: pylint
      runAfter:
        - git-clone
      workspaces:
        - name: source
          workspace: shared-workspace

    # Step 4: Run unit tests
    - name: unit-tests
      taskRef:
        name: pytest
      runAfter:
        - pylint
      workspaces:
        - name: source
          workspace: shared-workspace

    # Step 5: Build the container image
    - name: build
      taskRef:
        name: buildah
      runAfter:
        - pylint
      params:
        - name: IMAGE
          value: "quay.io/arszka/tekton-demo:latest"
        - name: SKIP_PUSH
          value: "true"
      workspaces:
        - name: source
          workspace: shared-workspace